{"version":3,"file":"scene.es.min.js","sources":["../src/core/World.ts","../src/core/Scene.ts","../src/core/Route.ts","../src/core/useScene.ts"],"sourcesContent":["import { Container } from 'pixi.js'\nimport { Scene } from '../core'\n\n/**\n * @class\n * @property { Bumber } x - 世界坐标 `x` 值\n * @property { Bumber } y - 世界坐标 `y` 值\n */\nexport default class World extends Container {\n    public x: number\n    public y: number\n    public scene: Scene\n\n    constructor(scene: Scene) {\n        super()\n        this.init()\n        this.scene = scene\n    }\n\n    public init() {\n        this.x = 0\n        this.y = 0\n    }\n\n    public onSceneChange() {\n        this.init()\n    }\n\n    public shutdown() {\n        this.removeChildren()\n    }\n}","import { Loader } from 'pixi.js'\nimport World from './World'\nimport Route from './Route'\nimport { IGame } from '../types'\n\nexport class Scene {\n    public name: string\n    public canUpdate: boolean\n    public world: World\n    public game: IGame\n    public route: Route\n    public static game: IGame\n    public static route: Route\n\n    constructor(name: string) {\n        this.name = name\n        this.canUpdate = false\n        this.world = new World(this)\n        this.game = Scene.game\n        this.route = Scene.route\n        this.route.push(this)\n    }\n\n    public get Loader() {\n        return {\n            add: (...args: any) => {\n                if (!Loader.shared.resources[args[0]]) {\n                    Loader.shared.add(...args)\n                }\n            },\n            Load: (images: object, closure: (name: string, path: string) => void) => {\n                Object.keys(images).map((key) => closure(key, images[key]))\n            },\n            onLoaded: (onLoaded: () => void = () => { }) => {\n                Loader.shared.load(onLoaded)\n            },\n        }\n    }\n\n    /**\n     * switchTo - 切换场景\n     * @param { String } sceneName - 场景名\n     * @param { Object } query - 场景参数\n     * \n     * @example\n     * \n     * import { Scene } from 'gamekit'\n     * class SceneHome extends Scene {\n     *     create() {\n     *         this.switchTo('sceneTwo', {\n     *             extra: 'data',\n     *         })\n     *     }\n     * }\n     */\n    public switchTo(sceneName: string, query: object = {}) {\n        this.route.to(sceneName, query)\n    }\n\n    /**\n     * getQuery - 获取场景参数\n     * @param { String } name - 参数 key 值\n     * \n     * @example\n     * import { Scene } from 'gamekit'\n     * class SceneHome extends Scene {\n     *     create() {\n     *         this.getQuery() // { extra: 'data' }\n     *         this.getQuery('extra') // 'data'\n     *     }\n     * }\n     */\n    public getQuery(name?: string) {\n        if (name) return this.route.query[name]\n        return this.route.query\n    }\n\n    /**\n     * create\n     */\n    public create() {\n        this.canUpdate = true\n    }\n\n    /**\n     * update\n     */\n    public update() {\n        if (!this.canUpdate) return false\n    }\n\n    public shutdown(cleanUp: boolean = true) {\n        this.canUpdate = false\n        if (cleanUp) {\n            this.world.shutdown()\n        }\n    }\n}","import { Scene } from './Scene'\n\nexport default class Route {\n    public scenes: {}\n    public prevSceneName: string | any\n    public currentSceneName: string | any\n    public pendingSceneName: string | any\n    public currentScene: Scene | null\n    public instance: Route | null\n    public query: any\n    public game: any;\n    public static instance: Route\n\n    constructor(game: any) {\n        this.game = game\n        this.scenes = {}\n        this.query = {}\n        this.prevSceneName = null\n        this.currentSceneName = null\n        this.pendingSceneName = null\n        this.currentScene = null\n        this.instance = null\n    }\n\n    /**\n     * 把场景保存在 `this.scenes` 中\n     * @param { Scene } scene - 场景实例\n     * @ignore\n     */\n    public push(scene: Scene) {\n        this.scenes[scene.name] = scene\n    }\n\n    /**\n     * 移除场景\n     * @param { Scene | String } scene - 场景实例或场景名\n     * @ignore\n     */\n    public remove(scene: string | Scene) {\n        if (typeof scene === 'string') {\n            delete this.scenes[scene]\n        } else if (scene instanceof Scene) {\n            delete this.scenes[scene.name]\n        } else {\n            console.warn(`需要移除的场景 ${scene} 不存在`)\n        }\n    }\n\n    /**\n     * 启动场景\n     * @param { String } sceneName - 场景名\n     * @param { Object } query - 场景参数\n     * @ignore\n     */\n    public start(sceneName: string = '', query: object = {}) {\n        this.to(sceneName, query)\n    }\n\n    /**\n     * 切换场景\n     * @param { String } sceneName - 场景名\n     * @param { Object } query - 场景参数\n     * @ignore\n     */\n    public to(sceneName: string, query: object) {\n        if (this.currentSceneName === sceneName) return false\n        if (this.isScene(sceneName)) {\n            this.pendingSceneName = sceneName\n            this.query = query\n        }\n    }\n\n    /**\n     * 场景更新\n     * @ignore\n     */\n    public update() {\n        if (this.pendingSceneName) this.setCurrentScene(this.pendingSceneName)\n        if (this.currentScene && this.currentScene.canUpdate) {\n            this.currentScene.update && this.currentScene.update()\n        }\n    }\n\n    /**\n     * 初始化当前成精\n     * @ignore\n     */\n    private setCurrentScene(pendingSceneName: string) {\n        if (!this.isScene(pendingSceneName)) {\n            console.warn(`场景 ${pendingSceneName} 不存在`)\n            return false\n        }\n        if (this.currentSceneName !== this.pendingSceneName) {\n            this.currentScene = this.scenes[pendingSceneName]\n            this.setGameWorld()\n            this.cleanStage()\n            this.fetchNextScene()\n            this.stateUpdate()\n            this.onSceneChange()\n        }\n    }\n\n    private setGameWorld() {\n        this.game.world = this.currentScene.world\n    }\n\n    private cleanStage() {\n        this.game.stage.removeChildren()\n    }\n\n    private fetchNextScene() {\n        this.game.stage.addChild(this.currentScene.world)\n        // @ts-ignore\n        if (this.currentScene.Load && typeof this.currentScene.Load === 'function') {\n            // @ts-ignore\n            this.currentScene.Load(() => {\n                this.currentScene.create()\n            })\n        } else {\n            this.currentScene.create()\n        }\n        this.pendingSceneName = null\n    }\n\n    private stateUpdate() {\n        this.prevSceneName = this.currentSceneName\n        this.currentSceneName = this.currentScene.name\n    }\n\n    private onSceneChange() {\n        if (this.prevSceneName) {\n            const preScene = this.scenes[this.prevSceneName]\n            preScene.shutdown()\n            this.game.stage.removeChild(preScene.world)\n        }\n        this.currentScene.world.onSceneChange()\n    }\n\n    public getCurrentScene() {\n        return this.currentScene\n    }\n\n    public getSceneByName(sceneName: string) {\n        if (this.scenes[sceneName]) {\n            return this.scenes[sceneName]\n        } else {\n            console.error(`场景 ${sceneName} 不存在`)\n        }\n    }\n\n    /**\n     * 判断是否是合法的「场景」\n     */\n    isScene(scene: string = '') {\n        const hasScene = this.scenes[scene] !== undefined\n        return hasScene\n    }\n\n    destroy() {\n        this.game = null\n        this.scenes = {}\n        this.pendingSceneName = null\n        this.currentSceneName = null\n        this.currentScene = null\n    }\n}\n","import Route from './Route'\n\nexport function useScene(game: any, scenes: object) {\n    const route = new Route(game)\n    const keys = Object.keys(scenes)\n    const values = Object.values(scenes)\n    values.map((Scene, index) => {\n        Scene.__proto__.game = game\n        Scene.__proto__.route = route\n        new Scene(keys[index])\n    })\n    route.start(keys[0])\n    game.ticker.add(() => route.update())\n}"],"names":["scene","_super","_this","init","tslib_1.__extends","World","x","y","removeChildren","Container","name","canUpdate","world","game","Scene","route","push","Object","add","_i","args","Loader","shared","resources","_a","Load","images","closure","keys","map","key","onLoaded","load","sceneName","query","to","cleanUp","shutdown","scenes","prevSceneName","currentSceneName","pendingSceneName","currentScene","instance","Route","console","warn","isScene","setCurrentScene","update","setGameWorld","cleanStage","fetchNextScene","stateUpdate","onSceneChange","stage","addChild","create","preScene","removeChild","error","hasScene","useScene","values","index","__proto__","start","ticker"],"mappings":"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"}