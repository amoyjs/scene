{"version":3,"file":"scene.js","sources":["../src/core/World.ts","../src/core/Scene.ts","../src/core/Route.ts","../src/core/useScene.ts"],"sourcesContent":["import { Container } from 'pixi.js'\nimport { Scene } from '../core'\n\n/**\n * @class\n * @property { Bumber } x - 世界坐标 `x` 值\n * @property { Bumber } y - 世界坐标 `y` 值\n */\nexport default class World extends Container {\n    x: number\n    y: number\n    scene: Scene\n\n    constructor(scene: Scene) {\n        super()\n        this.init()\n        this.scene = scene\n    }\n\n    public init() {\n        this.x = 0\n        this.y = 0\n    }\n\n    public onSceneChange() {\n        this.init()\n    }\n\n    public shutdown() {\n        this.removeChildren()\n    }\n}","import World from './World'\nimport Route from './Route'\n\nexport class Scene {\n    name: string\n    canUpdate: boolean\n    world: World\n    game: any\n    route: Route\n    static game: any\n    static route: Route\n\n    constructor(name: string) {\n        this.name = name\n        this.canUpdate = false\n        this.world = new World(this)\n        this.game = Scene.game\n        this.route = Scene.route\n        this.route.push(this)\n    }\n\n    /**\n     * switchTo - 切换场景\n     * @param { String } sceneName - 场景名\n     * @param { Object } query - 场景参数\n     * \n     * @example\n     * \n     * import { Scene } from 'gamekit'\n     * class SceneHome extends Scene {\n     *     create() {\n     *         this.switchTo('sceneTwo', {\n     *             extra: 'data',\n     *         })\n     *     }\n     * }\n     */\n    public switchTo(sceneName: string, query: object = {}) {\n        this.route.to(sceneName, query)\n    }\n\n    /**\n     * getQuery - 获取场景参数\n     * @param { String } name - 参数 key 值\n     * \n     * @example\n     * import { Scene } from 'gamekit'\n     * class SceneHome extends Scene {\n     *     create() {\n     *         this.getQuery() // { extra: 'data' }\n     *         this.getQuery('extra') // 'data'\n     *     }\n     * }\n     */\n    public getQuery(name?: string) {\n        if (name) return this.route.query[name]\n        return this.route.query\n    }\n\n    /**\n     * create\n     */\n    public create() {\n        \n    }\n\n    /**\n     * update\n     */\n    public update() {\n        \n    }\n\n    public shutdown(cleanUp: boolean = true) {\n        this.canUpdate = false\n        if (cleanUp) {\n            this.world.shutdown()\n        }\n    }\n}","import { Scene } from './Scene'\n\nexport default class Route {\n    scenes: {}\n    prevSceneName: string | any\n    currentSceneName: string | any\n    pendingSceneName: string | any\n    currentScene: Scene | null\n    instance: Route | null\n    query: any\n    game: any;\n    static instance: Route\n\n    constructor(game: any) {\n        this.game = game\n        this.scenes = {}\n        this.query = {}\n        this.prevSceneName = null\n        this.currentSceneName = null\n        this.pendingSceneName = null\n        this.currentScene = null\n        this.instance = null\n    }\n\n    /**\n     * 把场景保存在 `this.scenes` 中\n     * @param { Scene } scene - 场景实例\n     * @ignore\n     */\n    public push(scene: Scene) {\n        this.scenes[scene.name] = scene\n    }\n\n    /**\n     * 移除场景\n     * @param { Scene | String } scene - 场景实例或场景名\n     * @ignore\n     */\n    public remove(scene: string | Scene) {\n        if (typeof scene === 'string') {\n            delete this.scenes[scene]\n        } else if (scene instanceof Scene) {\n            delete this.scenes[scene.name]\n        } else {\n            console.warn(`需要移除的场景 ${scene} 不存在`)\n        }\n    }\n\n    /**\n     * 启动场景\n     * @param { String } sceneName - 场景名\n     * @param { Object } query - 场景参数\n     * @ignore\n     */\n    public start(sceneName: string = '', query: object = {}) {\n        this.to(sceneName, query)\n    }\n\n    /**\n     * 切换场景\n     * @param { String } sceneName - 场景名\n     * @param { Object } query - 场景参数\n     * @ignore\n     */\n    public to(sceneName: string, query: object) {\n        if (this.currentSceneName === sceneName) return false\n        if (this.isScene(sceneName)) {\n            this.pendingSceneName = sceneName\n            this.query = query\n        }\n    }\n\n    /**\n     * 场景更新\n     * @ignore\n     */\n    public update() {\n        if (this.pendingSceneName) this.setCurrentScene(this.pendingSceneName)\n        if (this.currentScene && this.currentScene.canUpdate) {\n            this.currentScene.update && this.currentScene.update()\n        }\n    }\n\n    /**\n     * 初始化当前成精\n     * @ignore\n     */\n    private setCurrentScene(pendingSceneName: string) {\n        if (!this.isScene(pendingSceneName)) {\n            console.warn(`场景 ${pendingSceneName} 不存在`)\n            return false\n        }\n        if (this.currentSceneName !== this.pendingSceneName) {\n            this.currentScene = this.scenes[pendingSceneName]\n            this.setGameWorld()\n            this.cleanStage()\n            this.fetchNextScene()\n            this.stateUpdate()\n            this.onSceneChange()\n        }\n    }\n\n    private setGameWorld() {\n        this.game.world = this.currentScene.world\n    }\n\n    private cleanStage() {\n        this.game.stage.removeChildren()\n    }\n\n    private fetchNextScene() {\n        this.game.stage.addChild(this.currentScene.world)\n        // @ts-ignore\n        if (this.currentScene.Load && typeof this.currentScene.Load === 'function') {\n            // @ts-ignore\n            this.currentScene.Load(() => {\n                this.currentScene.create()\n            })\n        } else {\n            this.currentScene.create()\n        }\n        this.pendingSceneName = null\n    }\n\n    private stateUpdate() {\n        this.prevSceneName = this.currentSceneName\n        this.currentSceneName = this.currentScene.name\n    }\n\n    private onSceneChange() {\n        if (this.prevSceneName) {\n            const preScene = this.scenes[this.prevSceneName]\n            preScene.shutdown()\n            this.game.stage.removeChild(preScene.world)\n        }\n        this.currentScene.world.onSceneChange()\n    }\n\n    public getCurrentScene() {\n        return this.currentScene\n    }\n\n    public getSceneByName(sceneName: string) {\n        if (this.scenes[sceneName]) {\n            return this.scenes[sceneName]\n        } else {\n            console.error(`场景 ${sceneName} 不存在`)\n        }\n    }\n\n    /**\n     * 判断是否是合法的「场景」\n     */\n    isScene(scene: string = '') {\n        const hasScene = this.scenes[scene] !== undefined\n        return hasScene\n    }\n\n    destroy() {\n        this.game = null\n        this.scenes = {}\n        this.pendingSceneName = null\n        this.currentSceneName = null\n        this.currentScene = null\n    }\n}\n","import Route from './Route'\n\nexport function useScene(game: any, scenes: object) {\n    const route = new Route(game)\n    const keys = Object.keys(scenes)\n    const values = Object.values(scenes)\n    values.map((Scene, index) => {\n        Scene.__proto__.game = game\n        Scene.__proto__.route = route\n        new Scene(keys[index])\n    })\n    route.start(keys[0])\n    game.ticker.add(() => route.update())\n}"],"names":["tslib_1.__extends","Container"],"mappings":"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"}